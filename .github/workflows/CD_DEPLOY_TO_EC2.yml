# Write github action workflow here
# For instructions, see https://github.com/SnowSuno/wheel-assignment-solution#3-cicd-%ED%8C%8C%EC%9D%B4%ED%94%84%EB%9D%BC%EC%9D%B8-%EA%B5%AC%EC%84%B1
name: CD_DEPLOY_TO_EC2

# 태그 생성 시 실행
on:
  release:
    types: [created]

jobs:
  build_images:
    name: Pull latest images and restart EC2
    runs-on: ubuntu-latest
    steps:
      - name: Get Github action IP
        id: ip
        uses: haythem/public-ip@v1.2

      - name: Setting environment variables
        run: echo "AWS_DEFAULT_REGION=ap-northeast-2" >> $GITHUB_ENV

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      - name: Add Github Actions IP to Security group
        run: |
          aws ec2 authorize-security-group-ingress \
            --group-id ${{ secrets.AWS_SECURITY_GROUP_ID }} \
            --protocol tcp \
            --port 22 \
            --cidr ${{ steps.ip.outputs.ipv4 }}/32

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/staging.key
          chmod 600 ~/.ssh/staging.key
          cat >>~/.ssh/config <<END
          HOST staging
            HostName $SSH_HOST
            User $SSH_USER
            IdentifyFile ~/.ssh/staging.key
            StrictHostKeyChecking no
          END
        env:
          SSH_HOST: ec2-3-34-43-80.ap-northeast-2.compute.amazonaws.com
          SSH_USER: ubuntu
          SSH_KEY: ${{ secrets.AWS_SSH_KEY }}

      - name: Restart with latest images
        run: ssh staging 'cd /home/ubuntu/2023-winter-wheel-assignment && docker compose up -d'

      - name: Remove Github Actions IP from security group
        run: |
          aws ec2 revoke-security-group-ingress  \
            --group-id ${{ secrets.AWS_SECURITY_GROUP_ID }} \
            --protocol tcp \
            --port 22 \
            --cidr ${{ steps.ip.outputs.ipv4 }}/32
        if: always()
